# Bash script to bundle all the steps of the method

# Header of the method with description
echo "
  ______ ___     ____   ____  _____ _____
 /_  __//   |   / __ \ / __ \/ ___// ___/
  / /  / /| |  / / / // / / /\__ \ \__ \\
 / /  / ___ | / /_/ // /_/ /___/ /___/ /
/_/  /_/  |_|/_____/ \____//____//____/


TADOSS - TAndem DOmain Swap Stability predictor

TADOSS estimates the stability of tandem domain swap conformations
from the 3D structure of a protein domain using an alchemical free
energy approximation based on coarse-grained (Go-like) models.

More information at: https://github.com/lafita/tadoss

-------------------------------------------------------------------
"

path=`dirname $0`

# Handle the inputs and help
usage="$(basename "$0") -f [file.pdb] [-h] [-d domain] [-r reduce] [-m]

    -f  path to PDB file of a domain structure (required)
    -d  domain name (default: query)
    -r  location of Reduce binary (default: reduce)
    -m  model most stable domain swap (default: false)
    -h  show this Help message

Code location: ${path}

"

domain="query"
file=""
reduce="reduce"
model="false"

while getopts ':mhf:d:r:' option
do
  case "$option" in
    h) echo "$usage"
       exit
       ;;
    d) domain=$OPTARG
       ;;
    f) file=$OPTARG
       ;;
    m) model="true"
       ;;
    r) reduce=$OPTARG
       ;;
    :) printf "Missing argument for -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
   \?) printf "Illegal option: -%s\n" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
  esac
done
shift $((OPTIND - 1))

# Test to see if we have the required input file
if [ "$file" == "" ]; then
  echo "Missing required -f [file.pdb] option"
  echo "$usage"
  exit 1
fi

# Create the log and tmp directories if not yet there
mkdir -p tmp
mkdir -p log

# Clean files from previous runs if any
{
  rm tmp/${domain}_*
  rm log/${domain}_*
  rm -r go_${domain}
  rm ${domain}-dG_cut.pdb
  rm ${domain}-dG_cut.tsv
  rm ${domain}-dG_join.tsv
  rm ${domain}-ddG_tot.tsv
} &> log/${domain}_0-cleaning.log


echo "Step 1 - Trim PDB file to protein only residues"
{
  python2.7 ${path}/trim_nonprotein.py ${file} tmp/${domain}_protein.pdb -w
} &> log/${domain}_1-process.log

if [ ! -f tmp/${domain}_protein.pdb ]; then
  echo "Error: see log/${domain}_1-process.log"
  exit 1
fi

echo "Step 2 - Add hydrogens to structure with reduce"
{
  echo "Using Reduce program in $reduce"
  $reduce tmp/${domain}_protein.pdb > tmp/${domain}_hadded.pdb
} &> log/${domain}_2-hadd.log

if [ ! -f tmp/${domain}_hadded.pdb ]; then
  echo "Error: see log/${domain}_2-hadd.log"
  exit 1
fi

echo "Step 3 - Calculate Go model energies"
{
  python2.7 ${path}/go_builder/go_builder.py -k ${domain} --gmx tmp/${domain}_hadded.pdb
} &> log/${domain}_3-go.log

if [ ! -f go_${domain}/go_${domain}_gomodel_golist.dat ]; then
  echo "Error: see log/${domain}_3-go.log"
  exit 1
fi

echo "Step 4 - Estimate alchemical ddG of domain swaps"
{
  python2.7 ${path}/tadoss.py ${domain} tmp/${domain}_hadded.pdb -w
} &> log/${domain}_4-ddG.log

if [ ! -f ${domain}-ddG_tot.tsv ]; then
  echo "Error: see log/${domain}_4-ddG.log"
  exit 1
fi


if [ "$model" == "true" ]; then
  
  echo "Step 5 - Model tandem domain swap structure - be patient, might take long"
  {
    Rscript ${path}/modelling/tadoss_model.R -p ${path} -d ${domain}
  } &> log/${domain}_5-model.log

  if [ ! -f ${domain}_tswap*.pdb ]; then
    echo "Error: see log/${domain}_5-model.log"
    exit 1
  fi

fi


echo ""
echo "SUCCESS!"
echo ""

# Print the total alchemical ddG of the domain to the user
value=$(tail -n 1 ${domain}-ddG_tot.tsv | awk '{print $5}')
echo "Total alchemical ddG of ${domain} is ${value} kcal/mol"
echo ""
